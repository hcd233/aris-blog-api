version: '3'

services:
  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    restart: always
    # ports:
    #   - 7700:7700
    env_file:
      - ./env/meilisearch.env
    volumes:
      - meilisearch-data:/data.ms
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    # ports:
    #   - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u$$MYSQL_USER -p$$MYSQL_PASSWORD" ]
      interval: 5s
      retries: 10
    env_file:
      - ./env/mysql.env

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - 9000:9000
    volumes:
      - minio-data:/data
    command: server /data
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - ./env/minio.env

  aris-db-migrate:
    image: aris-blog-api:latest # ghcr.io/hcd233/aris-blog:master
    container_name: aris-db-migrate
    restart: "no"
    env_file:
      - ./env/api.env
    depends_on:
      mysql:
        condition: service_healthy
    command: ["/app/aris-blog-api", "database", "migrate"]

  aris-blog-api:
    image: aris-blog-api:latest # ghcr.io/hcd233/aris-blog:master
    container_name: aris-blog-api
    restart: always
    ports:
      - 8080:8080
    env_file:
      - ./env/api.env
    depends_on:
      mysql:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      minio:
        condition: service_healthy
      aris-db-migrate:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://aris-blog-api:8080"]
      interval: 10s
      timeout: 5s
      retries: 5

    command: ["/app/aris-blog-api", "server", "start", "--host", "0.0.0.0", "--port", "8080"]

volumes:
  mysql-data:
    name: mysql-data
    external: true
  meilisearch-data:
    name: meilisearch-data
    external: true
  minio-data:
    name: minio-data
    external: true

# docker volume create mysql-data 
# docker volume create meilisearch-data
# docker volume create minio-data
# docker compose up -d